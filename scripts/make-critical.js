import { generate } from "critical";
import { glob } from "glob";
import { readFile, writeFile } from "node:fs/promises";
import { fileURLToPath } from "node:url";
import path from "node:path";

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏, –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—è—Å—å –æ—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootPath = path.resolve(__dirname, "..");
const distPath = path.resolve(rootPath, "dist");

async function run() {
  console.log("üöÄ Starting Critical CSS generation...");

  try {
    // 1. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ HTML-—Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ —Å–±–æ—Ä–∫–∏ (dist)
    const htmlFiles = await glob("**/*.html", { cwd: distPath });

    if (htmlFiles.length === 0) {
      console.warn(
        'üü° No HTML files found in "dist" folder. Skipping Critical CSS.',
      );
      return;
    }

    // 2. –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–ª—è –Ω–µ–≥–æ Critical CSS
    for (const file of htmlFiles) {
      const filePath = path.join(distPath, file);
      console.log(`Processing: ${file}`);

      const { html } = await generate({
        // –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º CSS –ø—Ä—è–º–æ –≤ HTML
        inline: true,
        // –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å - –Ω–∞—à–∞ –ø–∞–ø–∫–∞ —Å–æ —Å–±–æ—Ä–∫–æ–π
        base: distPath,
        // –ò—Å—Ö–æ–¥–Ω—ã–π HTML-—Ñ–∞–π–ª
        src: file,
        // –†–∞–∑–º–µ—Ä—ã –≤—å—é–ø–æ—Ä—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è "–≤–∏–¥–∏–º–æ–π —á–∞—Å—Ç–∏"
        dimensions: [
          {
            height: 900,
            width: 1300,
          },
          {
            height: 896,
            width: 414,
          },
        ],
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ @font-face, —Ç–∞–∫ –∫–∞–∫ —à—Ä–∏—Ñ—Ç—ã –≥—Ä—É–∑—è—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        ignore: {
          atrule: ["@font-face"],
        },
      });

      // 3. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º HTML-—Ñ–∞–π–ª —É–∂–µ —Å –∏–Ω–ª–∞–π–Ω–æ–≤—ã–º CSS
      await writeFile(filePath, html);
    }

    console.log("‚úÖ Critical CSS inlined successfully for all HTML files!");
  } catch (error) {
    console.error("‚ùå Error during Critical CSS generation:");
    console.error(error);
    process.exit(1); // –í—ã—Ö–æ–¥–∏–º —Å –æ—à–∏–±–∫–æ–π, —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å —Å–±–æ—Ä–∫—É
  }
}

run();
